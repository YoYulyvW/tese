#!/bin/bash
# -*- coding: UTF-8 -*-


# Armbian/Ubuntu arm64 一键换源脚本
# 功能：自动选择最佳源，支持中科大/清华/官方ports源

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m'

# 检查root权限
check_root() {
    if [ "$(id -u)" != "0" ]; then
        echo -e "${RED}错误：此脚本必须用root权限运行！${NC}"
        exit 1
    fi
}

# 清理apt进程和锁文件
clean_apt() {
    echo -e "${YELLOW}[1/5] 正在清理apt进程...${NC}"
    killall -9 apt apt-get 2>/dev/null
    rm -f /var/lib/apt/lists/lock
    rm -f /var/lib/dpkg/lock
    rm -f /var/cache/apt/archives/lock
    rm openvpn-install*
}

# 检测最佳镜像源
detect_best_mirror() {
    echo -e "${YELLOW}[2/5] 正在检测最佳镜像源...${NC}"
    
    # 测试连接速度
    tuna_speed=$(curl -o /dev/null -s -w '%{speed_download}' https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/dists/jammy/Release | awk '{printf "%.0f", $1/1024}')
    ustc_speed=$(curl -o /dev/null -s -w '%{speed_download}' https://mirrors.ustc.edu.cn/ubuntu-ports/dists/jammy/Release | awk '{printf "%.0f", $1/1024}')
    
    if [ "$tuna_speed" -gt "$ustc_speed" ]; then
        echo -e "${GREEN}清华源速度更快 ($tuna_speed KB/s)，将使用清华源${NC}"
        MIRROR="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports"
    else
        echo -e "${GREEN}中科大源速度更快 ($ustc_speed KB/s)，将使用中科大源${NC}"
        MIRROR="https://mirrors.ustc.edu.cn/ubuntu-ports"
    fi
    
    # 如果两个国内源都不可用，则使用官方ports源
    if ! curl --connect-timeout 5 -s ${MIRROR}/ubuntu-ports/dists/jammy/Release > /dev/null; then
        echo -e "${YELLOW}国内镜像不可用，将使用官方ports源${NC}"
        MIRROR="http://ports.ubuntu.com/ubuntu-ports"
    fi
}

# 替换系统源
replace_sources() {
    echo -e "${YELLOW}[3/5] 正在备份当前源...${NC}"
    cp /etc/apt/sources.list /etc/apt/sources.list.bak
    
    echo -e "${YELLOW}[4/5] 正在写入新源...${NC}"
    cat > /etc/apt/sources.list <<EOF
# 默认注释源码仓库，如需启用请取消注释
deb ${MIRROR} jammy main restricted universe multiverse
# deb-src ${MIRROR} jammy main restricted universe multiverse

deb ${MIRROR} jammy-updates main restricted universe multiverse
# deb-src ${MIRROR} jammy-updates main restricted universe multiverse

deb ${MIRROR} jammy-backports main restricted universe multiverse
# deb-src ${MIRROR} jammy-backports main restricted universe multiverse

deb ${MIRROR} jammy-security main restricted universe multiverse
# deb-src ${MIRROR} jammy-security main restricted universe multiverse
EOF
}

# 更新软件列表
update_apt() {
    echo -e "${YELLOW}[5/5] 正在更新软件列表...${NC}"
    apt update 2>&1 | tee /tmp/apt_update.log
    
    if grep -q "Failed" /tmp/apt_update.log; then
        echo -e "${RED}更新过程中出现错误：${NC}"
        grep "Failed" /tmp/apt_update.log
        echo -e "${YELLOW}尝试使用官方ports源...${NC}"
        MIRROR="http://ports.ubuntu.com/ubuntu-ports"
        replace_sources
        apt update
    fi
}

# 主执行流程
main() {
    check_root
    clean_apt
    detect_best_mirror
    replace_sources
    update_apt
    
    echo -e "${GREEN}\n源更换完成！当前使用镜像：${MIRROR}${NC}"
    echo -e "可执行以下命令升级软件：${YELLOW}apt upgrade${NC}"
}

#main
#apt install ntp
# 修改系统时间 时区 
#cat <<EOT > /etc/systemd/system/ntp-sync.service
#[Unit]
#Description=NTP Synchronization
#After=network.target

#[Service]
#ExecStart=/usr/sbin/ntpd -g -u ntp:ntp -p /var/run/ntpd.pid
#Restart=always

#[Install]
#WantedBy=multi-user.target
#EOT
#ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo "Asia/Shanghai" > /etc/timezone
#systemctl enable ntp-sync.service && systemctl start ntp-sync.service

function replace_ip() {
    local file="$1"
    local ip="$2"
    local file_path="/root/${file}"

    if [ -f "$file_path" ]; then
        echo "修改 $file 文件 ..."
    elif [ ! -f "$file_path" ]; then
        echo "$file 文件不存在，开始下载 ..."
        curl -sSL "https://git.lyvw.top:4433/https://raw.githubusercontent.com/YoYulyvW/tese/master/${file}" -o "$file_path"
    fi

    if ! grep -q "^net.ipv4.ip_forward=1$" /etc/sysctl.conf; then
        sed -i "s/^#net.ipv4.ip_forward.*/net.ipv4.ip_forward=1/g" /etc/sysctl.conf
        sysctl -q -p
        echo "设置 net.ipv4.ip_forward=1"
    fi

    sed -i "s/192\.168\.[0-9]\{1,3\}/${ip}/g" "$file_path"
    sed -i 's|https://github.com|https://git.lyvw.top:4433/https://github.com|g' "$file_path"
    sed -i 's|v3.1.4/EasyRSA-3.1.4.tgz|v3.2.0/EasyRSA-3.2.0.tgz|g' "$file_path"
    echo "已经成功修改 $file 文件"
    echo
}

# 获取用户输入的IP地址
echo 
echo "脚本内默认为192.168.254.0/24"
echo "请输入要修改的IP地址(前3位)例:192.168.250"
read -p " [留空回车使用默认值]: " ip_addr

if [ -n "$ip_addr" ]; then
    if [[ "$ip_addr" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        ip_addr=$(echo "$ip_addr" | cut -d "." -f 1-3)
    else
        echo "输入的IP地址不合法，使用默认值！"
        ip_addr="192.168.254"
    fi
else
    ip_addr="192.168.254"
fi

# 查找并替换openvpn-install.sh文件中的IP地址
replace_ip "openvpn-install.sh" "$ip_addr"

# 查找并替换openvpn-install-v6.sh文件中的IP地址
replace_ip "openvpn-install-v6.sh" "$ip_addr"

#echo "已经修改ip为:${ip_addr}.x"

if dpkg -l docker-ce | grep -q "^ii"; then
    echo "Docker已安装"
else
    echo "Docker未安装，开始安装"
    curl -sSL https://git.lyvw.top:4433/https://raw.githubusercontent.com/YoYulyvW/tese/refs/heads/master/get-docker | sh
fi

echo
